service: appointment-backend

frameworkVersion: '3'

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  isOffline: ${opt:offline, self:provider.stage, ''}
  serverless-offline:
    host: 0.0.0.0
    httpPort: 3000
  env: ${file(env.js)}

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    SNS_TOPIC_ARN: !Ref AppointmentsSNSTopic
    EVENT_BUS_NAME: default
    DYNAMODB_TABLE: !Ref AppointmentsTable
    # Reference the custom variables, which are resolved after .env is loaded
    RDS_HOST: ${self:custom.env.db.host}
    RDS_USER: ${self:custom.env.db.user}
    RDS_PASSWORD: ${self:custom.env.db.password}
    RDS_DATABASE_PE: ${self:custom.env.db.pe_db}
    RDS_DATABASE_CL: ${self:custom.env.db.cl_db}
    IS_OFFLINE: ${self:custom.isOffline}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:Query"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
          Resource:
            - !GetAtt AppointmentsTable.Arn
            - Fn::Join:
                - ""
                - - !GetAtt AppointmentsTable.Arn
                  - "/index/insuredId-index"
        - Effect: "Allow"
          Action:
            - "sns:Publish"
          Resource: !Ref AppointmentsSNSTopic
        - Effect: "Allow"
          Action:
            - "events:PutEvents"
          Resource: "*"
        - Effect: "Allow"
          Action:
            - "sqs:ReceiveMessage"
            - "sqs:DeleteMessage"
            - "sqs:GetQueueAttributes"
          Resource:
            - !GetAtt AppointmentQueuePE.Arn
            - !GetAtt AppointmentQueueCL.Arn
            - !GetAtt AppointmentConfirmationQueue.Arn

functions:
  appointment:
    handler: dist/handlers/appointment.appointmentHandler
    events:
      - http:
          path: appointments
          method: post
          cors: true
      - http:
          path: appointments
          method: get
          cors: true

  appointment_pe:
    handler: dist/handlers/appointment_pe.handler
    events:
      - sqs:
          arn: !GetAtt AppointmentQueuePE.Arn
          batchSize: 1

  appointment_cl:
    handler: dist/handlers/appointment_cl.handler
    events:
      - sqs:
          arn: !GetAtt AppointmentQueueCL.Arn
          batchSize: 1

  appointment_confirmation:
    handler: dist/handlers/appointment_confirmation.processCompletionFromSQS
    events:
      - sqs:
          arn: !GetAtt AppointmentConfirmationQueue.Arn
          batchSize: 1

resources:
  - ${file(resources.yml)}
