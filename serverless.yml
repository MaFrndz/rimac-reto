service: appointment-backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1

functions:
  appointment_pe:
    handler: dist/handlers/appointment_pe.handler
    environment:
      MYSQL_HOST: mysql-stancia.ckdqc08a6quw.us-east-1.rds.amazonaws.com
      MYSQL_USER: admin
      MYSQL_PASSWORD: Password123
      MYSQL_DB: mysql-pe
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SQSPE
              - Arn

  appointment_cl:
    handler: dist/handlers/appointment_cl.handler
    environment:
      MYSQL_HOST: mysql-stancia.ckdqc08a6quw.us-east-1.rds.amazonaws.com
      MYSQL_USER: admin
      MYSQL_PASSWORD: Password123
      MYSQL_DB: mysql-cl
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SQSCL
              - Arn
  updateAppointmentStatus:
    handler: dist/handlers/updateAppointmentStatus.updateAppointmentStatus
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - ConformidadQueue
              - Arn
  sqsPEHandler:
    handler: dist/handlers/sqsHandlers.sqsPEHandler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SQSPE
              - Arn
  sqsCLHandler:
    handler: dist/handlers/sqsHandlers.sqsCLHandler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SQSCL
              - Arn
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
  appointment:
    handler: dist/handlers/appointment.appointmentHandler
    events:
      - http:
          path: appointments
          method: post
  swagger:
    handler: dist/handlers/swagger.swaggerHandler
    events:
      - http:
          path: swagger
          method: get

plugins:
  - serverless-dotenv-plugin
  - serverless-offline
resources:
  - ${file(resources.yml)}
