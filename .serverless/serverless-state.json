{
  "service": {
    "service": "appointment-backend",
    "serviceObject": {
      "name": "appointment-backend"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "SqsPEHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/appointment-backend-dev-sqsPEHandler"
            }
          },
          "SqsCLHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/appointment-backend-dev-sqsCLHandler"
            }
          },
          "HelloLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/appointment-backend-dev-hello"
            }
          },
          "AppointmentLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/appointment-backend-dev-appointment"
            }
          },
          "SwaggerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/appointment-backend-dev-swagger"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "appointment-backend",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/appointment-backend-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/appointment-backend-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "SQSPE",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "SQSCL",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "appointment-backend",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "SqsPEHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/appointment-backend/dev/1751230195578-2025-06-29T20:49:55.578Z/appointment-backend.zip"
              },
              "Handler": "dist/handlers/sqsHandlers.sqsPEHandler",
              "Runtime": "nodejs18.x",
              "FunctionName": "appointment-backend-dev-sqsPEHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SqsPEHandlerLogGroup"
            ]
          },
          "SqsCLHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/appointment-backend/dev/1751230195578-2025-06-29T20:49:55.578Z/appointment-backend.zip"
              },
              "Handler": "dist/handlers/sqsHandlers.sqsCLHandler",
              "Runtime": "nodejs18.x",
              "FunctionName": "appointment-backend-dev-sqsCLHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SqsCLHandlerLogGroup"
            ]
          },
          "HelloLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/appointment-backend/dev/1751230195578-2025-06-29T20:49:55.578Z/appointment-backend.zip"
              },
              "Handler": "handler.hello",
              "Runtime": "nodejs18.x",
              "FunctionName": "appointment-backend-dev-hello",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HelloLogGroup"
            ]
          },
          "AppointmentLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/appointment-backend/dev/1751230195578-2025-06-29T20:49:55.578Z/appointment-backend.zip"
              },
              "Handler": "dist/handlers/appointment.appointmentHandler",
              "Runtime": "nodejs18.x",
              "FunctionName": "appointment-backend-dev-appointment",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AppointmentLogGroup"
            ]
          },
          "SwaggerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/appointment-backend/dev/1751230195578-2025-06-29T20:49:55.578Z/appointment-backend.zip"
              },
              "Handler": "dist/handlers/swagger.swaggerHandler",
              "Runtime": "nodejs18.x",
              "FunctionName": "appointment-backend-dev-swagger",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SwaggerLogGroup"
            ]
          },
          "SqsPEHandlerLambdaVersionFUxp54T2AbMrXa4bOtY0a9dPV9cjr9XrfcsX5aSKg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SqsPEHandlerLambdaFunction"
              },
              "CodeSha256": "gBzDuf3gaBa08rnWBxsiwpWpM+7vQRT8IPF4FEKmBPM="
            }
          },
          "SqsCLHandlerLambdaVersionUpttHqg2eaWUxtymhcMsIXqidxT1xDkL4HNLaLIdXUI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SqsCLHandlerLambdaFunction"
              },
              "CodeSha256": "gBzDuf3gaBa08rnWBxsiwpWpM+7vQRT8IPF4FEKmBPM="
            }
          },
          "HelloLambdaVersionJTWci4SsX7RIpbsQi9etOB4w5nap5T7kAxaCOi40": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HelloLambdaFunction"
              },
              "CodeSha256": "gBzDuf3gaBa08rnWBxsiwpWpM+7vQRT8IPF4FEKmBPM="
            }
          },
          "AppointmentLambdaVersionjiDVLBNDrCDjHTnOenMecJ3wndCrQsNzVTkXp2abi4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppointmentLambdaFunction"
              },
              "CodeSha256": "gBzDuf3gaBa08rnWBxsiwpWpM+7vQRT8IPF4FEKmBPM="
            }
          },
          "SwaggerLambdaVersionyLkLL8oMKADxZZZIKyesOFyTd0jEpW2ntnzOLuBsRU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SwaggerLambdaFunction"
              },
              "CodeSha256": "gBzDuf3gaBa08rnWBxsiwpWpM+7vQRT8IPF4FEKmBPM="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-appointment-backend",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceHello": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "hello",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAppointments": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "appointments",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSwagger": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "swagger",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodHelloGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHello"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HelloLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "HelloLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodAppointmentsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAppointments"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AppointmentLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AppointmentLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodSwaggerGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSwagger"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SwaggerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SwaggerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1751230184886": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodHelloGet",
              "ApiGatewayMethodAppointmentsPost",
              "ApiGatewayMethodSwaggerGet"
            ]
          },
          "HelloLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HelloLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AppointmentLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AppointmentLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SwaggerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SwaggerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SqsPEHandlerEventSourceMappingSQSSQSPE": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "SQSPE",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "SqsPEHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "SqsCLHandlerEventSourceMappingSQSSQSCL": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "SQSCL",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "SqsCLHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "AppointmentsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "appointments",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "SQSPE": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "SQS_PE"
            }
          },
          "SQSCL": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "SQS_CL"
            }
          },
          "SQSPESubscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": "arn:aws:sns:us-east-1:393157401981:AppoinmentsSNS",
              "Protocol": "sqs",
              "Endpoint": {
                "Fn::GetAtt": [
                  "SQSPE",
                  "Arn"
                ]
              },
              "FilterPolicy": {
                "countryISO": [
                  "PE"
                ]
              }
            }
          },
          "SQSCLSubscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": "arn:aws:sns:us-east-1:393157401981:AppoinmentsSNS",
              "Protocol": "sqs",
              "Endpoint": {
                "Fn::GetAtt": [
                  "SQSCL",
                  "Arn"
                ]
              },
              "FilterPolicy": {
                "countryISO": [
                  "CL"
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-appointment-backend-dev-ServerlessDeploymentBucketName"
            }
          },
          "SqsPEHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SqsPEHandlerLambdaVersionFUxp54T2AbMrXa4bOtY0a9dPV9cjr9XrfcsX5aSKg"
            },
            "Export": {
              "Name": "sls-appointment-backend-dev-SqsPEHandlerLambdaFunctionQualifiedArn"
            }
          },
          "SqsCLHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SqsCLHandlerLambdaVersionUpttHqg2eaWUxtymhcMsIXqidxT1xDkL4HNLaLIdXUI"
            },
            "Export": {
              "Name": "sls-appointment-backend-dev-SqsCLHandlerLambdaFunctionQualifiedArn"
            }
          },
          "HelloLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HelloLambdaVersionJTWci4SsX7RIpbsQi9etOB4w5nap5T7kAxaCOi40"
            },
            "Export": {
              "Name": "sls-appointment-backend-dev-HelloLambdaFunctionQualifiedArn"
            }
          },
          "AppointmentLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppointmentLambdaVersionjiDVLBNDrCDjHTnOenMecJ3wndCrQsNzVTkXp2abi4"
            },
            "Export": {
              "Name": "sls-appointment-backend-dev-AppointmentLambdaFunctionQualifiedArn"
            }
          },
          "SwaggerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SwaggerLambdaVersionyLkLL8oMKADxZZZIKyesOFyTd0jEpW2ntnzOLuBsRU"
            },
            "Export": {
              "Name": "sls-appointment-backend-dev-SwaggerLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-appointment-backend-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "sqsPEHandler": {
        "handler": "dist/handlers/sqsHandlers.sqsPEHandler",
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2][\"Resource\"][0]"
              }
            }
          }
        ],
        "name": "appointment-backend-dev-sqsPEHandler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "SqsPEHandlerLambdaVersionFUxp54T2AbMrXa4bOtY0a9dPV9cjr9XrfcsX5aSKg"
      },
      "sqsCLHandler": {
        "handler": "dist/handlers/sqsHandlers.sqsCLHandler",
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2][\"Resource\"][1]"
              }
            }
          }
        ],
        "name": "appointment-backend-dev-sqsCLHandler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "SqsCLHandlerLambdaVersionUpttHqg2eaWUxtymhcMsIXqidxT1xDkL4HNLaLIdXUI"
      },
      "hello": {
        "handler": "handler.hello",
        "events": [
          {
            "http": {
              "path": "hello",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "appointment-backend-dev-hello",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "HelloLambdaVersionJTWci4SsX7RIpbsQi9etOB4w5nap5T7kAxaCOi40"
      },
      "appointment": {
        "handler": "dist/handlers/appointment.appointmentHandler",
        "events": [
          {
            "http": {
              "path": "appointments",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "appointment-backend-dev-appointment",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "AppointmentLambdaVersionjiDVLBNDrCDjHTnOenMecJ3wndCrQsNzVTkXp2abi4"
      },
      "swagger": {
        "handler": "dist/handlers/swagger.swaggerHandler",
        "events": [
          {
            "http": {
              "path": "swagger",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "appointment-backend-dev-swagger",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "SwaggerLambdaVersionyLkLL8oMKADxZZZIKyesOFyTd0jEpW2ntnzOLuBsRU"
      }
    },
    "resources": {
      "Resources": {
        "AppointmentsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "appointments",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "SQSPE": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "SQS_PE"
          }
        },
        "SQSCL": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "SQS_CL"
          }
        },
        "SQSPESubscription": {
          "Type": "AWS::SNS::Subscription",
          "Properties": {
            "TopicArn": "arn:aws:sns:us-east-1:393157401981:AppoinmentsSNS",
            "Protocol": "sqs",
            "Endpoint": {
              "Fn::GetAtt": [
                "SQSPE",
                "Arn"
              ]
            },
            "FilterPolicy": {
              "countryISO": [
                "PE"
              ]
            }
          }
        },
        "SQSCLSubscription": {
          "Type": "AWS::SNS::Subscription",
          "Properties": {
            "TopicArn": "arn:aws:sns:us-east-1:393157401981:AppoinmentsSNS",
            "Protocol": "sqs",
            "Endpoint": {
              "Fn::GetAtt": [
                "SQSCL",
                "Arn"
              ]
            },
            "FilterPolicy": {
              "countryISO": [
                "CL"
              ]
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "appointment-backend",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\mafer\\Documents\\rimac\\appointment-backend\\.serverless\\appointment-backend.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/appointment-backend/dev/1751230195578-2025-06-29T20:49:55.578Z",
    "artifact": "appointment-backend.zip"
  }
}